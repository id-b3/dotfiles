
cwd=`pwd`
current_username=`whoami`
export $current_username
export HISTSIZE=99999
export HISTFILESIZE=99999
# prompt
FMT_BOLD="\[\e[1m\]"
FMT_DIM="\[\e[2m\]"
FMT_RESET="\[\e[0m\]"
FMT_UNBOLD="\[\e[22m\]"
FMT_UNDIM="\[\e[22m\]"
FG_BLACK="\[\e[30m\]"
FG_BLUE="\[\e[34m\]"
FG_CYAN="\[\e[36m\]"
FG_GREEN="\[\e[32m\]"
FG_YELLOW="\[\e[33m\]"
FG_GREY="\[\e[37m\]"
FG_MAGENTA="\[\e[35m\]"
FG_RED="\[\e[31m\]"
FG_WHITE="\[\e[97m\]"
BG_BLACK="\[\e[40m\]"
BG_BLUE="\[\e[44m\]"
BG_CYAN="\[\e[46m\]"
BG_GREEN="\[\e[42m\]"
BG_YELLOW="\[\e[43m\]"
BG_MAGENTA="\[\e[45m\]"

function parse_venv_env () {
    if [ ! -z "$VIRTUAL_ENV" ]
    then
        # Use VIRTUAL_ENV_PROMPT if it exists, otherwise derive from VIRTUAL_ENV
        if [ ! -z "$VIRTUAL_ENV_PROMPT" ]
        then
            echo "$VIRTUAL_ENV_PROMPT"
        else
            echo "($(basename "$VIRTUAL_ENV")) "
        fi
    fi
}

# Function to determine if the session is local or remote
function get_terminal_emoji() {
    if [ -n "$SSH_CONNECTION" ] || [ -n "$SSH_CLIENT" ]; then
        echo "‚õÖ"
    else
        echo "üíª"
    fi
}

# Update the PS1 prompt
PS1="\n ${FG_BLUE}‚ï≠‚îÄ" # begin arrow to prompt
PS1+="${FG_MAGENTA}‚óÄ" # begin USERNAME container
PS1+="${BG_MAGENTA}${FG_CYAN}${FMT_BOLD} \$(get_terminal_emoji) " # dynamically set emoji
PS1+="${FG_WHITE}\u" # print username
PS1+="${FMT_UNBOLD}${FMT_BOLD} ${FG_MAGENTA}${BG_BLUE}‚ñ∂ " # end USERNAME container / begin DIRECTORY container
PS1+="${FG_GREY}\w " # print directory
PS1+="${FG_BLUE}${BG_CYAN}‚ñ∂ " # end DIRECTORY container / begin FILES container
PS1+="${FG_BLACK}"
PS1+="üìÅ \$(find . -mindepth 1 -maxdepth 1 -type d | wc -l) " # print number of folders
PS1+="üìÑ \$(find . -mindepth 1 -maxdepth 1 -type f | wc -l) " # print number of files
PS1+="üîó \$(find . -mindepth 1 -maxdepth 1 -type l | wc -l) " # print number of symlinks
PS1+="${FMT_RESET}${FG_CYAN}"
PS1+="\$(git branch 2> /dev/null | grep '^*' | colrm 1 2 | xargs -I BRANCH echo -n \"" # check if git branch exists
PS1+="${BG_YELLOW}‚ñ∂ " # end FILES container / begin BRANCH container
PS1+="${FG_WHITE}üîÄ${FMT_BOLD} BRANCH " # print current git branch
PS1+="${FMT_RESET}${FG_YELLOW}\")‚ñ∂\n " # end last container (either FILES or BRANCH)
PS1+="${FG_BLUE}‚ï∞‚ùØ " # end arrow to prompt
PS1+="${FG_WHITE}"'$(parse_venv_env)'
PS1+="${FG_CYAN}\\$ " # print prompt
PS1+="${FMT_RESET}"

export PS1

function lscolor() {
while IFS=$'\t' read -r -d '' perms name
do
    echo "${perms:0:1}$(tput bold; tput setaf 1)${perms:1:3}$(tput setaf 4)${perms:4:3}$(tput setaf 2)${perms:7:3}$(tput sgr0) ${name}"
done < <(find . -maxdepth 1 -printf "%M\t%f\0")
}
#alias ll="lscolor"

if command -v "$HOME/.local/bin/starship" >/dev/null 2>&1; then
    eval -- "$("$HOME/.local/bin/starship" init bash --print-full-init)"
elif command -v starship >/dev/null 2>&1; then
    eval -- "$(starship init bash --print-full-init)"
fi

